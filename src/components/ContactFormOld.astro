---
// Source Code from: https://vendicated.dev/en/contact/
---

<section
	data-testid="contact"
	id="contact"
	class="flex flex-col flex-wrap items-center justify-center gap-8 text-black dark:text-white md:mb-20 lg:mb-0 lg:h-screen"
>
	<form class="message-form">
		<div>
			<label>
				{'contact.name'}
				<input
					type="text"
					name="name"
					placeholder={'contact.namePlaceholder'}
					maxlength="100"
					required
				/>
			</label>
			<label>
				{'contact.email'}
				<input type="email" name="email" placeholder={'contact.emailPlaceholder'} />
			</label>
		</div>
		<label>
			{'contact.message'}
			<textarea
				class="message-area"
				name="message"
				placeholder={'contact.messagePlaceholder'}
				required
				minlength="10"
				maxlength="10000"></textarea>
		</label>

		<button type="submit">{'contact.send'}</button>
	</form>
</section>

<script>
	document.querySelector('.message-form')!.addEventListener('submit', async (e) => {
		e.preventDefault();

		const form = e.target as HTMLFormElement;
		const formData = new FormData(form);

		const response = await fetch('/contact-form', {
			method: 'PUT',
			body: formData,
		});

		if (response.ok) {
			alert('Message sent!');
			form.reset();
			form.querySelector('textarea')!.style.height = 'auto';
		} else {
			if (response.status === 429) alert('You are sending too many messages!');
			else alert('Something went wrong!');
		}
	});

	// Auto-resize textarea
	document.querySelector('.message-area')!.addEventListener('input', (e) => {
		const textarea = e.target as HTMLTextAreaElement;

		textarea.style.height = '0';
		if (textarea.scrollHeight < 400) {
			textarea.style.height = `${textarea.scrollHeight}px`;
		} else {
			// Limit height to 400px and restore overflow-y scrollbar
			textarea.style.height = '400px';
			textarea.style.overflowY = 'scroll';
		}
	});
</script>

<style>
	form {
		display: flex;
		flex-direction: column;
		gap: 1.2em;
	}

	div {
		display: grid;
		grid-template-columns: repeat(2, minmax(0, 1fr));
		gap: 0.5em;
	}

	@media screen and (max-width: 600px) {
		div {
			grid-template-columns: minmax(0, 1fr);
			gap: 1.2em;
		}
	}

	label {
		display: flex;
		flex-direction: column;
		gap: 0.5em;
	}

	input,
	textarea,
	button {
		padding: 0.75em;
		border-radius: 6px;

		color: var(--text);
		background-color: var(--surface2);
		border: 1px solid var(--color-semi-trans);
		transition: 200ms border-color;
	}

	textarea {
		overflow-y: hidden;
		min-height: 5em;
		box-sizing: border-box;
	}

	:is(input, textarea):focus {
		border-color: var(--accent);
		outline: none;
	}

	input:invalid:not(:placeholder-shown) {
		border-color: var(--warning);
	}

	button {
		color: var(--text);
		cursor: pointer;
		transition: 200ms;
		transition-property: color, background;
	}

	button:is(:active, :hover) {
		background: var(--accent);
		color: var(--background-color);
	}
</style>
