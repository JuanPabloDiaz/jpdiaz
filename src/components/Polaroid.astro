---
import { CERTIFICATION_IMAGES } from '@src/consts';

import { Image } from 'astro:assets';
---

<div id="polaroid">
	<Image src={CERTIFICATION_IMAGES[0]?.src} alt="certification" width={100} height={100} />
	<div class="img-container"></div>
	<label>
		<span class="left">&#60;</span>
		<label>{CERTIFICATION_IMAGES[0]?.label}</label>
		<span class="right">&#62;</span>
	</label>
</div>

<style>
	#polaroid label span {
		font-size: 1.5em;
		opacity: 0;
		transition: 0.4s ease;
	}

	#polaroid .img-container {
		border-radius: 0.05em;
		box-shadow: inset 0 0 0.5em rgba(0, 0, 0, 0.5);
		height: 160px;
		width: 160px;
		position: absolute;
		top: 0.5em;
		z-index: 100;
		border: 0.1em solid rgba(0, 0, 0, 0.1);
		margin: -0.1em;
	}

	#polaroid:hover label span {
		opacity: 0.5;
		padding: 0 0.25em;
	}

	#polaroid:active label span.right {
		transform: translateX(0.25em);
	}

	#polaroid:hover label span.right {
		opacity: 1;
	}

	#polaroid label {
		display: flex;
		justify-content: space-between;
		align-items: center;
		font-family: 'Delicious Handrawn', sans-serif;
		color: rgba(0, 0, 0, 0.5);
		height: 2em;
		font-size: 0.8em;
		cursor: pointer;
	}

	#polaroid img {
		border-radius: 0.05em;
		aspect-ratio: 1/1;
		transform: rotate(0deg);
	}

	#polaroid img::after {
		box-shadow: inset 3px 3px 10px 0 #000000;
	}

	#polaroid {
		box-shadow:
			inset 0 0 0.5em rgba(0, 0, 0, 0.25),
			0 0 2em rgba(0, 0, 0, 0.25);
		border-top: 2px solid rgba(0, 0, 0, 0.1);
		border-left: 2px solid rgba(0, 0, 0, 0.2);
		border-right: 2px solid rgba(0, 0, 0, 0.2);
		border-bottom: 2px solid rgba(0, 0, 0, 0.3);
		padding: 0.5em 0.5em 0.25em 0.5em;
		height: 12em;
		width: 10em;
		float: right;
		border-radius: 0.1em;
		margin: 2em 2em 1em 2em;
		transform: rotate(2deg);
		transition: 0.15s ease;
		cursor: pointer;
		opacity: 0;
	}

	#polaroid:hover {
		scale: 1.1;
	}

	@media (max-width: 600px) {
		#polaroid {
			margin: auto;
			margin-top: 2em;
			float: unset;
		}
	}
</style>

<script>
	import { CERTIFICATION_IMAGES } from '@src/consts';

	CERTIFICATION_IMAGES.forEach((image) => {
		const img = new Image();
		img.src = image.src;
	});

	// Source: https://armandocanals.com/posts/CSS-transform-rotating-a-3D-object-perspective-based-on-mouse-position.html
	// (inspiration): https://github.com/jchen/site/blob/0ade8a3e5f174563974574eaf2cfc6b90cdf9bae/src/components/Fortune/Fortune.astro
	let constrain = 150;
	let mouseOverContainer = document.getElementsByTagName('html')[0];
	let rotationalContainer = document.getElementById('polaroid')!;

	mouseOverContainer.onmousemove = function (e) {
		rotationalContainer &&
			window.requestAnimationFrame(function () {
				let box = rotationalContainer.getBoundingClientRect();
				let calcX = -(e.clientY - box.y - box.height / 2) / constrain;
				let calcY = (e.clientX - box.x - box.width / 2) / constrain;
				let transformation = `perspective(100px) rotateX(${calcX}deg) rotateY(${calcY}deg)`;
				rotationalContainer.style.transform = transformation;
			});
	};

	// Cycle through images on polaroid
	let img = document.getElementsByTagName('img')[0];
	let label = document.getElementsByTagName('label')[2];
	let animation_duration = 500;
	let auto_cycle = true;

	function cycle(stop_auto_cycle = false) {
		if (stop_auto_cycle) auto_cycle = false;
		CERTIFICATION_IMAGES.push(CERTIFICATION_IMAGES.shift()!);
		[img, label].forEach((e) =>
			e.animate([{ opacity: 1 }, { opacity: 0 }, { opacity: 1 }], {
				duration: animation_duration,
			})
		);
		setTimeout(() => {
			img.src = CERTIFICATION_IMAGES[0].src;
			label.innerText = CERTIFICATION_IMAGES[0].label;
		}, animation_duration / 2);
	}

	setInterval(() => auto_cycle && cycle(), 4000);

	rotationalContainer.onclick = () => cycle(true);
	document.onkeydown = (e) => e.key === 'ArrowRight' && cycle(true);

	rotationalContainer.animate([{ opacity: 0 }, { opacity: 1 }], {
		duration: 400,
		fill: 'forwards',
	});
</script>
