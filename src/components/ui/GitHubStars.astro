---
// Define the component's props
interface Props {
	github_url: string;
}

const { github_url } = Astro.props;

// Function to extract owner and repo name from GitHub URL
const getRepoDetails = (url: string) => {
	const regex = /github\.com\/([^\/]+)\/([^\/]+)/;
	const matches = url.match(regex);
	return matches ? { owner: matches[1], repo: matches[2] } : null;
};

const repoDetails = getRepoDetails(github_url);

// Initialize starsCount with a default message
let starsCount = 'Loading...';

// Function to fetch stars count
const fetchStarsCount = async (owner: string, repo: string) => {
	try {
		const response = await fetch(`https://api.github.com/repos/${owner}/${repo}`);
		const data = await response.json();
		return data.stargazers_count.toString();
	} catch (error) {
		console.error('Error fetching stars count:', error);
		return 'Error';
	}
};

// Fetch stars count if repoDetails is valid
if (repoDetails) {
	starsCount = await fetchStarsCount(repoDetails.owner, repoDetails.repo);
}
---

<div>
	{repoDetails ? <span>Stars: {starsCount}</span> : <span>Invalid GitHub URL</span>}
</div>
