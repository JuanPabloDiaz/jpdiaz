---
import { getCollection } from 'astro:content';
import BlogPost from '@layouts/BlogPost.astro';
import { defaultLang } from '@i18n/ui';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	const now = new Date();

	return posts
		.filter((post) => {
			// Filtrar por idioma
			if (post.data.lang !== defaultLang) return false;

			// Filtrar borradores
			if (post.data.draft) return false;

			// En desarrollo, mostrar todos los posts no-borradores
			if (import.meta.env.DEV) return true;

			// En producci√≥n, verificar la fecha
			if (!(post.data.pubDate instanceof Date)) return false;

			// Comparar fechas usando timestamps
			return post.data.pubDate.getTime() <= now.getTime();
		})
		.map((post) => ({
			params: { slug: post.slug },
			props: { post },
		}));
}

const { post } = Astro.props;
let Content;

try {
	const rendered = await post.render();
	Content = rendered.Content;
	console.log('Post rendered successfully:', post.slug);
} catch (error) {
	console.error('Error rendering post:', post.slug, error);
	return Astro.redirect('/404');
}
---

<BlogPost {...post.data}>
	<Content />
</BlogPost>
